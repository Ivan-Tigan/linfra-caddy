services:
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"  # HTTP/3
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    network_mode: host
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:2019/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Watcher to reload Caddy when Caddyfile changes
  caddy-reloader:
    image: alpine:latest
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/watch/Caddyfile:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: sh -c "
      apk add --no-cache inotify-tools curl docker-cli &&
      echo 'Watching for Caddyfile changes...' &&
      while true; do
        inotifywait -e modify,create,delete /watch/Caddyfile &&
        echo 'Caddyfile changed, reloading Caddy...' &&
        docker exec caddy-caddy-1 caddy reload --config /etc/caddy/Caddyfile --force &&
        echo 'Caddy reloaded successfully'
      done
      "
    network_mode: host
    depends_on:
      - caddy

volumes:
  caddy_data:
  caddy_config:
